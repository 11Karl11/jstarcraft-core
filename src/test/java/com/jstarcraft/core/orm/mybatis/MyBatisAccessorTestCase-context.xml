<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!--1 引入属性文件,在配置中占位使用 -->
	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/com/jstarcraft/core/orm/mybatis/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!--2 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="validationQuery" value="select ''" />
		<property name="timeBetweenEvictionRunsMillis" value="5000" />
		<property name="numTestsPerEvictionRun" value="10" />
		<property name="testOnBorrow" value="false" />
		<property name="testWhileIdle" value="false" />
		<property name="initialSize" value="10" />
		<property name="maxActive" value="2000" />
		<property name="maxIdle" value="5" />
		<property name="minIdle" value="1" />
	</bean>

	<!--3 会话工厂bean sqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 扫描包 -->
		<property name="typeAliasesPackage" value="com.jstarcraft.core.orm.mybatis" />
		<property name="plugins">
			<array>
				<!-- 分页插件配置 -->
				<bean id="paginationInterceptor" class="com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor">
					<property name="dialectType" value="h2" />
				</bean>
			</array>
		</property>
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<bean id="myBatisAccessor" class="com.jstarcraft.core.orm.mybatis.MyBatisAccessor">
		<constructor-arg ref="sqlSessionTemplate" />
	</bean>

	<!--4 自动扫描对象关系映射 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--指定会话工厂,如果当前上下文中只定义了一个则该属性可省去 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 指定要自动扫描接口的基础包,实现接口 -->
		<property name="basePackage" value="com.jstarcraft.core.orm.mybatis" />
	</bean>

	<!--5 声明式事务管理 -->
	<!--定义事物管理器,由spring管理事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!--支持注解驱动的事务管理,指定事务管理器 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--6 容器自动扫描IOC组件 -->
	<context:component-scan base-package="com.jstarcraft.core.orm.mybatis" />

	<!--7 aspectj支持自动代理实现AOP功能 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!--8 Hibernate配置 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.jstarcraft.core.orm.mybatis" />
		<property name="hibernateProperties">
			<props>
				<prop key="current_session_context_class">thread</prop>
				<prop key="cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>

</beans>